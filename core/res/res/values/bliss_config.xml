<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2014-2022 BlissRoms Project
     SPDX-License-Identifier: Apache-2.0
-->
<resources>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
    </string-array>

    <!-- Whether Pixel props is enabled -->
    <bool name="config_enablePixelProps">true</bool>

    <!-- Whether or not we should show vendor mismatch message -->
    <bool name="config_show_vendor_mismatch_message">false</bool>

    <!-- Whether device supports an alt. ambient display -->
    <bool name="config_alt_ambient_display">false</bool>

    <!-- Name of a font family to use as light font. For theming purpose. -->
    <string name="config_lightFontFamily" translatable="false">sans-serif-light</string>

    <!-- Name of a font family to use as regular font. For theming purpose. -->
    <string name="config_regularFontFamily" translatable="false">sans-serif-regular</string>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- Default value for proximity check on screen wake
     NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)-->
    <bool name="config_proximityCheckOnWake">false</bool>
    <integer name="config_proximityCheckTimeout">250</integer>
    <bool name="config_proximityCheckOnWakeEnabledByDefault">false</bool>

    <!-- Defines the actions shown in advanced reboot submenu -->
    <string-array name="config_restartActionsList">
        <item>restart</item>
        <item>restart_recovery</item>
        <item>restart_bootloader</item>
    </string-array>

    <!-- These are system packages exempted from privacy indicator -->
    <string-array name="config_indicatorExemptedPackageNames" translatable="false">
        <item>com.android.bluetooth</item>
        <item>com.android.cellbroadcastservice</item>
        <item>com.android.mms.service</item>
        <item>com.android.networkstack.tethering</item>
        <item>com.android.ons</item>
        <item>com.android.phone</item>
        <item>com.android.printspooler</item>
        <item>com.android.providers.telephony</item>
        <item>com.android.stk</item>
        <item>com.android.systemui</item>
        <item>com.google.android.settings.intelligence</item>
        <item>com.mediatek.ims</item>
        <item>com.qualcomm.qti.cne</item>
        <item>com.shannon.imsservice</item>
        <item>org.pixelexperience.faceunlock</item>
  </string-array>

    <!-- Button backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsButtonBrightnessControl">0</integer>
    <dimen name="config_buttonBrightnessSettingDefaultFloat">1.0</dimen>

    <!-- Keyboard backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsKeyboardBrightnessControl">0</integer>
    <dimen name="config_keyboardBrightnessSettingDefaultFloat">1.0</dimen>

  <!-- Hardware keys present on the device, stored as a bit field.
       This integer should equal the sum of the corresponding value for each
       of the following keys present:
           1 - Home
           2 - Back
           4 - Menu
           8 - Assistant (search)
          16 - App switch
          32 - Camera
          64 - Volume rocker
       For example, a device with Home, Back and Menu keys would set this
       config to 7. -->
  <integer name="config_deviceHardwareKeys">64</integer>

  <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
       This integer should equal the sum of the corresponding value for each
       of the following keys present:
           1 - Home
           2 - Back
           4 - Menu
           8 - Assistant (search)
          16 - App switch
          32 - Camera
          64 - Volume rocker
       For example, a device with Home, Back and Menu keys would set this
       config to 7. -->
  <integer name="config_deviceHardwareWakeKeys">64</integer>

  <!-- Control the behavior when the user long presses the back button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/bliss/DeviceKeysConstants.java.
  -->
  <integer name="config_longPressOnBackBehavior">0</integer>

  <!-- Control the behavior when the user long presses the home button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/bliss/DeviceKeysConstants.java.
  -->
  <integer name="config_longPressOnHomeBehavior">3</integer>
  <!-- Control the behavior when the user double-taps the home button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/bliss/DeviceKeysConstants.java.
  -->
  <integer name="config_doubleTapOnHomeBehavior">0</integer>
  <!-- Control the behavior when the user long presses the menu button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/bliss/DeviceKeysConstants.java.
  -->
  <integer name="config_longPressOnMenuBehavior">2</integer>
  <!-- Control the behavior when the user long presses the app switch button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/bliss/DeviceKeysConstants.java.
  -->
  <integer name="config_longPressOnAppSwitchBehavior">0</integer>

  <!-- Indicates that the device has Single-stage Camera key
       (without "Focus" state) instead of Dual-stage. -->
  <bool name="config_singleStageCameraKey">false</bool>

  <!-- Whether charging control should be enabled by default -->
  <bool name="config_chargingControlEnabled">false</bool>
  <!-- Default charging control mode.
       This integer should be set to:
       1 - auto - Use the alarm to calculate the time range when to activate charging control
       2 - custom - Use time range when the device is usually charging for hours
       3 - limit - Just limit charging -->
  <integer name="config_defaultChargingControlMode">1</integer>
  <!-- Default time when charging control is activated.
       Represented as seconds from midnight (e.g. 79200 == 10pm). -->
  <integer name="config_defaultChargingControlStartTime">79200</integer>
  <!-- Default time when battery will be fully charged.
       Represented as seconds from midnight (e.g. 21600 == 6am). -->
  <integer name="config_defaultChargingControlTargetTime">21600</integer>
  <!-- Default charging limit. -->
  <integer name="config_defaultChargingControlLimit">80</integer>
  <!-- Considering the fact that the system might have an incorrect estimation of the time to
       full. Set a time margin to make the device fully charged before the target time arrives.
       The unit is minutes and the default value is 30 minutes. If you find that it is not enough
       to make the device to be fully charged at the target time, increase the value
  -->
  <integer name="config_chargingControlTimeMargin">30</integer>
  <!-- For a device that cannot bypass battery when charging stops (that is, the battery current
       is 0mA when charging stops), the battery will gradually discharge. So we need to make it
       recharge when the battery level is lower than a threshold. Set this so that the device
       will be charged between (limit - val) and limit. -->
  <integer name="config_chargingControlBatteryRechargeMargin">10</integer>

    <!-- Defines the sysfs attribute path used by pocket bridge
         to communicate pocket state to the pocket judge kernel driver. -->
    <string name="config_pocketBridgeSysfsInpocket"></string>

    <!-- Pocket Lock -->
    <bool name="config_pocketModeSupported">true</bool>
    <bool name="config_pocketUseLightSensor">true</bool>

    <!-- Defines custom OEM sensor for pocket detection. -->
    <string name="config_pocketJudgeVendorSensorName"></string>
    <string name="config_pocketJudgeVendorProximitySensorName"></string>
</resources>
